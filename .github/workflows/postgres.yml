name: Postgres service

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  container-job:
    runs-on: ubuntu-latest
    
    # runs all of the steps inside the specified container rather than on the VM host.  
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image:  node:10.16-jessie

    services:
      postgres:
        image: postgres:10.8
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME_TEST: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build --if-present
      - name: test coverage
        run: npm run coveralls
        env:
          DB_USER: postgres
          DB_HOST: postgres
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          PORT: ${{secrets.PORT}}
          CLIENT_ID: ${{secrets.CLIENT_ID}}
          CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
          CLOUD_NAME: ${{secrets.CLOUD_NAME}}
          API_KEY: ${{secrets.API_KEY}}
          API_SECRET: ${{secrets.API_SECRET}}
          FACEBOOK_APP_ID: ${{secrets.FACEBOOK_APP_ID}}
          FACEBOOK_APP_SECRET: ${{secrets.FACEBOOK_APP_SECRET}}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
